name: Publish to crates.io

on:
  release:
    types: [published]

permissions:
  contents: write

jobs:
  test:
    name: Test, Lint and Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - name: Cache cargo files
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            ./target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Run fmt
        run: cargo fmt --all -- --check

      - name: Run clippy
        run: cargo clippy --all -- -D warnings

      - name: Run test
        run: cargo test --all

      - name: Run check
        run: cargo check --all

  publish:
    needs: [test]
    name: Publish monorepo
    runs-on: ubuntu-latest

    env:
      CARGO_REGISTRY_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - name: Publish lexer to crates.io
        run: cargo publish --package brainease_lexer

      - run: sleep 15

      - name: Publish transpiler to crates.io
        run: cargo publish --package brainease_transpiler

      - run: sleep 15

      - name: Publish runtime to crates.io
        run: cargo publish --package brainease_runtime

      - run: sleep 15

      - name: Publish cli to crates.io
        run: cargo publish --package brainease

  attach:
    needs: [test]
    name: Attach binaries on latest release (${{ matrix.target }})
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        target:
          [
            x86_64-unknown-linux-musl,
            x86_64-pc-windows-msvc,
            x86_64-apple-darwin,
            armv7-unknown-linux-gnueabihf
          ]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install musl tools
        run: sudo apt-get install musl-tools

      - name: Cache cargo files
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            ./target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          target: ${{ matrix.target }}
          override: true

      - name: Build target
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --all --release --target ${{ matrix.target }}

      - name: Zip binaries
        uses: vimtor/action-zip@v1
        with:
          files:
            README.md LICENSE target/${{ matrix.target }}/release/${{ (matrix.target == 'x86_64-pc-windows-msvc' &&
            'brainz.exe') || 'brainz'}}
          dest: brainease-${{ matrix.target }}.zip

      - name: Upload Binaries
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: brainease-${{ matrix.target }}.zip
          file_glob: true
          tag: ${{ github.ref }}
          overwrite: true
